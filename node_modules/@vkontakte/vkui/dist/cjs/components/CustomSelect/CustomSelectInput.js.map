{"version":3,"sources":["../../../../src/components/CustomSelect/CustomSelectInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusWithin } from '../../hooks/useFocusWithin';\nimport { SizeType } from '../../lib/adaptivity';\nimport { getFormFieldModeFromSelectType } from '../../lib/select';\nimport { HasAlign, HasRef, HasRootRef } from '../../types';\nimport { FormField, FormFieldProps } from '../FormField/FormField';\nimport type { SelectType } from '../Select/Select';\nimport { SelectTypography } from '../SelectTypography/SelectTypography';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './CustomSelectInput.module.css';\n\nconst sizeYClassNames = {\n  none: styles['CustomSelectInput--sizeY-none'],\n  [SizeType.COMPACT]: styles['CustomSelectInput--sizeY-compact'],\n};\n\nexport interface CustomSelectInputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLDivElement>,\n    HasAlign,\n    Omit<FormFieldProps, 'mode' | 'type'> {\n  selectType?: SelectType;\n  multiline?: boolean;\n  labelTextTestId?: string;\n  fetching?: boolean;\n}\n\n/**\n * @since 5.10.0\n * @private\n */\nexport const CustomSelectInput = ({\n  align = 'left',\n  getRef,\n  className,\n  getRootRef,\n  style,\n  before,\n  after,\n  status,\n  children,\n  placeholder,\n  selectType = 'default',\n  multiline,\n  disabled,\n  fetching,\n  labelTextTestId,\n  ...restProps\n}: CustomSelectInputProps) => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const title = children || placeholder;\n  const showLabelOrPlaceholder = !Boolean(restProps.value);\n\n  const handleRootRef = useExternRef(getRootRef);\n  const focusWithin = useFocusWithin(handleRootRef);\n\n  return (\n    <FormField\n      Component=\"div\"\n      style={style}\n      className={classNames(\n        styles['CustomSelectInput'],\n        align === 'right' && styles['CustomSelectInput--align-right'],\n        align === 'center' && styles['CustomSelectInput--align-center'],\n        !children && styles['CustomSelectInput--empty'],\n        multiline && styles['CustomSelectInput--multiline'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        before && styles['CustomSelectInput--hasBefore'],\n        after && styles['CustomSelectInput--hasAfter'],\n        className,\n      )}\n      getRootRef={handleRootRef}\n      before={before}\n      after={after}\n      disabled={disabled}\n      mode={getFormFieldModeFromSelectType(selectType)}\n      status={status}\n    >\n      <div className={styles['CustomSelectInput__input-group']}>\n        <div\n          className={classNames(styles['CustomSelectInput__container'], className)}\n          tabIndex={-1}\n          aria-hidden\n          data-testid={labelTextTestId}\n        >\n          <SelectTypography selectType={selectType} className={styles['CustomSelectInput__title']}>\n            {showLabelOrPlaceholder && title}\n          </SelectTypography>\n        </div>\n        <Text\n          {...restProps}\n          disabled={disabled && !fetching}\n          readOnly={restProps.readOnly || (disabled && fetching)}\n          Component=\"input\"\n          normalize={false}\n          type=\"text\"\n          className={classNames(\n            styles['CustomSelectInput__el'],\n            (restProps.readOnly || (showLabelOrPlaceholder && !focusWithin)) &&\n              styles['CustomSelectInput__el--cursor-pointer'],\n          )}\n          getRootRef={getRef}\n          placeholder={children ? '' : placeholder}\n        />\n      </div>\n    </FormField>\n  );\n};\n"],"names":["CustomSelectInput","sizeYClassNames","none","SizeType","COMPACT","align","getRef","className","getRootRef","style","before","after","status","children","placeholder","selectType","multiline","disabled","fetching","labelTextTestId","restProps","useAdaptivity","sizeY","title","showLabelOrPlaceholder","Boolean","value","handleRootRef","useExternRef","focusWithin","useFocusWithin","FormField","Component","classNames","REGULAR","mode","getFormFieldModeFromSelectType","div","tabIndex","aria-hidden","data-testid","SelectTypography","Text","readOnly","normalize","type"],"mappings":";;;;+BAmCaA;;;eAAAA;;;;;;;;+DAnCU;oBACI;6BACG;4BACD;8BACE;0BACN;sBACsB;yBAEL;gCAET;oBACZ;AAGrB,IAAMC;IACJC,IAAI;GACHC,oBAAQ,CAACC,OAAO;AAmBZ,IAAMJ,oBAAoB;8BAC/BK,OAAAA,kCAAQ,uBACRC,gBAAAA,QACAC,mBAAAA,WACAC,oBAAAA,YACAC,eAAAA,OACAC,gBAAAA,QACAC,eAAAA,OACAC,gBAAAA,QACAC,kBAAAA,UACAC,qBAAAA,wCACAC,YAAAA,4CAAa,+BACbC,mBAAAA,WACAC,kBAAAA,UACAC,kBAAAA,UACAC,yBAAAA,iBACGC;QAfHf;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,IAA2BE,kBAAAA,IAAAA,4BAAa,4BAAbA,gBAAnBC,OAAAA,0CAAQ;IAEhB,IAAMC,QAAQV,YAAYC;IAC1B,IAAMU,yBAAyB,CAACC,QAAQL,UAAUM,KAAK;IAEvD,IAAMC,gBAAgBC,IAAAA,0BAAY,EAACpB;IACnC,IAAMqB,cAAcC,IAAAA,8BAAc,EAACH;IAEnC,qBACE,qBAACI,oBAAS;QACRC,WAAU;QACVvB,OAAOA;QACPF,WAAW0B,IAAAA,gBAAU,2BAEnB5B,UAAU,iDACVA,UAAU,mDACV,CAACQ,4CACDG,iDACAM,UAAUnB,oBAAQ,CAAC+B,OAAO,IAAIjC,eAAe,CAACqB,MAAM,EACpDZ,8CACAC,4CACAJ;QAEFC,YAAYmB;QACZjB,QAAQA;QACRC,OAAOA;QACPM,UAAUA;QACVkB,MAAMC,IAAAA,sCAA8B,EAACrB;QACrCH,QAAQA;qBAER,qBAACyB;QAAI9B,SAAS;qBACZ,qBAAC8B;QACC9B,WAAW0B,IAAAA,gBAAU,sCAAyC1B;QAC9D+B,UAAU,CAAC;QACXC,eAAAA;QACAC,eAAarB;qBAEb,qBAACsB,kCAAgB;QAAC1B,YAAYA;QAAYR,SAAS;OAChDiB,0BAA0BD,uBAG/B,qBAACmB,UAAI,8CACCtB;QACJH,UAAUA,YAAY,CAACC;QACvByB,UAAUvB,UAAUuB,QAAQ,IAAK1B,YAAYC;QAC7Cc,WAAU;QACVY,WAAW;QACXC,MAAK;QACLtC,WAAW0B,IAAAA,gBAAU,+BAEnB,AAACb,CAAAA,UAAUuB,QAAQ,IAAKnB,0BAA0B,CAACK,WAAW;QAGhErB,YAAYF;QACZQ,aAAaD,WAAW,KAAKC;;AAKvC"}